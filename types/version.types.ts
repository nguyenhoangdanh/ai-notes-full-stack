
// Versions types
export interface CreateVersionDto {
  message?: string;
  tags?: string[];
}

export interface NoteVersion {
  id: string;
  noteId: string;
  version: number;
  title: string;
  content: string;
  tags: string[];
  message?: string;
  isAutoGenerated: boolean;
  createdAt: string;
  author: {
    id: string;
    name?: string;
    email: string;
  };
}

export interface VersionComparison {
  from: NoteVersion;
  to: NoteVersion;
  changes: Array<{
    type: "addition" | "deletion" | "modification";
    field: "title" | "content" | "tags";
    oldValue?: string;
    newValue?: string;
    position?: number;
  }>;
}

export interface VersionStatistics {
  totalVersions: number;
  autoGeneratedVersions: number;
  manualVersions: number;
  averageVersionsPerNote: number;
  lastVersionCreated: string;
}

export interface VersionTimeline {
  versions: Array<{
    id: string;
    version: number;
    message?: string;
    isAutoGenerated: boolean;
    createdAt: string;
    author: {
      name?: string;
      email: string;
    };
  }>;
  milestones: Array<{
    date: string;
    event: string;
    description: string;
  }>;
}